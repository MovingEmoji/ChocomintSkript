options:
	prefix: &b[&enUtils&b]

on load:
	broadcast "{@prefix} &aSuccessfully loaded PotAPI"

on unload:
	broadcast "{@prefix} &cUnloaded PotAPI"

on shoot:
	if "%projectile%" is "thrown potion":
		set {nutil.pot.tag::%projectile's uuid%} to true
		set {_lc} to location of projectile
		set {_lc} to location 0.12 above {_lc}
		teleport projectile to {_lc}
		set {_sv} to vector from yaw shooter's yaw and pitch shooter's pitch
		set {_v} to vector from yaw shooter's yaw and pitch shooter's pitch
		set vector length of {_v} to 0.372
		set y of {_v} to y of {_v} + 0.08
		set projectile's velocity to {_v}
		wait 3 tick
		if vector length of {nutil.player.velocity::%shooter's uuid%} > 0.25:
			if angle between {_sv} and {nutil.player.velocity::%shooter's uuid%} <= 18:
				while {nutil.pot.tag::%projectile's uuid%} is set:
					set {_v} to vector between projectile and shooter
					teleport projectile to location 1 above shooter
					set projectile's velocity to {_v}
					wait a tick


every a tick:
	loop all players:
		set {_lc} to location of loop-player
		set y coord of {_lc} to 0
		set {_v} to vector between {nutil.player.lastlocation::%loop-player's uuid%} and {_lc}
		set {nutil.player.velocity::%loop-player's uuid%} to {_v}
		set {_lc} to location of loop-player
		set y coord of {_lc} to 0
		set {nutil.player.lastlocation::%loop-player's uuid%} to {_lc}

on projectile hit:
	delete {nutil.pot.tag::%projectile's uuid%}

on consume:
	if event-item is water bottle:
		wait a tick
		remove 1 glass bottle from player's inventory

on quit:
	delete {nutil.player.velocity::%player's uuid%}
	delete {nutil.player.lastlocation::%player's uuid%}
