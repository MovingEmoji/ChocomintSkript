options:
	prefix: &b[&enUtils&b]
	kit: NoDelay

on load:
	broadcast "{@prefix} &2Successfully loaded {@kit}'s knockback"

on unload:
	broadcast "{@prefix} &4Unloaded {@kit}'s knockback"

player velocity event:
	if {nutil.player.%player's uuid%::play} is "{@kit}":
		if {nutil.player.%player's uuid%::lastattack} is set:
			if {nutil.player.%player's uuid%::damagecause} is attack:
				cancel event
				set {_ag} to {nutil.player.%player's uuid%::lastattack}
				delete {nutil.player.%player's uuid%::lastattack} and {nutil.player.%player's uuid%::damagecause}
				set {_ag.uuid} to uuid of {_ag}
				set {_v} to vector between {_ag} and player
				set {_v} to normalized value of {_v}
				set {_r} to 0.36
				set y of {_v} to 0.35
				if {nutil.player.lastground::%player's uuid%} >= 3:
					loop {nutil.player.lastground::%player's uuid%} times:
						set y of {_v} to y of {_v} - 0.027
						if y of {_v} > 0:
							set {_r} to {_r} + 0.02
						else:
							set {_r} to {_r} - 0.01
					if {_r} >= 0.4:
						set {_r} to 0.4 
				set x of {_v} to x of {_v} * {_r}
				set z of {_v} to z of {_v} * {_r}
				set player's velocity to {_v}
				#broadcast "%{_r}%"
